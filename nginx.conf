<%
require 'json'
require 'base64'
@vcap_services = JSON.parse(ENV['VCAP_SERVICES'])
@onpremise_proxy_host = @vcap_services['connectivity'][0]['credentials']['onpremise_proxy_host']
@onpremise_proxy_port = @vcap_services['connectivity'][0]['credentials']['onpremise_proxy_port']

@basic_auth_string = ('Basic ' + Base64.strict_encode64(ENV['TARGET_AUTH_USER'] + ':' + ENV['TARGET_AUTH_PASSWORD'])).strip
%>
worker_processes 1;
daemon off;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;
events { worker_connections 1024; }

http {
  log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
  access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;
  default_type application/octet-stream;
  include mime.types;
  sendfile on;
  gzip on;
  tcp_nopush on;
  keepalive_timeout 30;


  upstream proxy_server  {
      server <%=  @onpremise_proxy_host + ':' + @onpremise_proxy_port %>;
  }

  server {
    set $target_virtual_host "<%= ENV['CLOUD_CONNECTOR_VIRTUAL_HOST'] %>";

    listen <%= ENV["PORT"] %>;
    server_name localhost;

    location / {
      root <%= ENV["APP_ROOT"] %>/www;

      rewrite ^(.*) "HTTP://$target_virtual_host$1" break;
      proxy_pass http://proxy_server;

      proxy_set_header Proxy-Authorization "$http_authorization";
      proxy_set_header Host "$target_virtual_host";
      proxy_set_header Authorization "<%= @basic_auth_string %>";
    }
  }
}
